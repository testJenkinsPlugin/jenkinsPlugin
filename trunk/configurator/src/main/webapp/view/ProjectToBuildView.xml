<?xml version="1.0"?>
<j:jelly xmlns:d="jelly:define" xmlns:f="/lib/form" xmlns:i="jelly:fmt" xmlns:j="jelly:core" xmlns:l="/lib/layout" xmlns:p="/lib/hudson/project" xmlns:st="jelly:stapler" xmlns:t="/lib/hudson">
    <div id="${divID}" name="projectToBuild${projectSuffix}">
        <label class="close-project-to-build" name="closeProject" onclick="configurator.closeElement(this)">X</label>
        <j:if test="${viewStatus.equals('DELETED')}">
            <label class="projectToBuild_status_deleted">DELETED! </label>
        </j:if>
        <j:if test="${viewStatus.equals('NEW')}">
            <label class="projectToBuild_status_new">NEW! </label>
        </j:if>
        <div class="div-textinput">
            <j:if test="${view_old != null and view_old.getProjectUrl() != null and !view_old.getProjectUrl().equals(view.getProjectUrl())}">
                <label class="diff_value">&quot;${view_old.getProjectUrl()}&quot;</label>
                <br/>
            </j:if>
            <label>Project url:</label>
            <div>
                <input class="textbox" name="projectUrl" onblur="configurator.checkURL(this)" type="text" value="${view.getProjectUrl()}"/>
            </div>
            <div class="error-block display-none" name="projectUrl-block">
                <img src="../images/16x16/error.png"/>Not correct url</div>
        </div>
        <div class="div-textinput">
            <j:if test="${view_old != null and view_old.getCredentials() != null and !view_old.getCredentials().equals(view.getCredentials())}">
                <label class="diff_value">&quot;${view_old.getCredentialsNameById(view_old.getCredentials())}&quot;</label>
                <br/>
            </j:if>
            <label>Credentials:</label>
            <div>
                <select class="textbox" name="credentials" value="${view.getCredentials()}">
                    <option value="not selected">not selected</option>
                    <j:forEach items="${credentialsList}" var="sct">
                        <j:choose>
                            <j:when test="${((view.getCredentials()==null) and userDefaultCredentials!=null and sct.endsWith(userDefaultCredentials))}">
                                <option selected="true" value="${userDefaultCredentials}">${view.getCredentialName(sct)}
                                </option>
                            </j:when>
                            <j:when test="${view.isCredentialSelected(view.getCredentials(),view.getCredentialId(sct))}">
                                <option selected="true" value="${view.getCredentialId(sct)}">${view.getCredentialName(sct)}
                                </option>
                            </j:when>
                            <j:otherwise>
                                <option value="${view.getCredentialId(sct)}">${view.getCredentialName(sct)}</option>
                            </j:otherwise>
                        </j:choose>
                    </j:forEach>
                </select>
                <j:if test="${isAdmin}">
                    <input id="def_cred_button" onclick="configurator.setCurrentCredentialsAsDefault(this)" type="button" value="Set as default"/>
                </j:if>
            </div>
        </div>
        <div class="div-textinput">
            <j:if test="${view_old != null and view_old.getBranchName() != null and !view_old.getBranchName().equals(view.getBranchName())}">
                <label class="diff_value">&quot;${view_old.getBranchName()}&quot;</label>
                <br/>
            </j:if>
            <label>Branch name:</label>
            <div>
                <input class="textbox" name="branchName" type="text" value="${view.getBranchName()}"/>
            </div>
        </div>
        <div class="div-textinput">
            <j:if test="${view_old != null and view_old.getLocalDirectoryPath() != null and !view_old.getLocalDirectoryPath().equals(view.getLocalDirectoryPath())}">
                <label class="diff_value">&quot;${view_old.getLocalDirectoryPath()}&quot; </label>
                <br/>
            </j:if>
            <label>Local module directory (optional):</label>
            <div>
                <input class="textbox" name="localDirectoryPath" onblur="configurator.checkPath(this)" type="text" value="${view.getLocalDirectoryPath()}"/>
                <img class="image" name="localDirectoryPath-help" onClick="configurator.imageHelp(this)" src="/static/c2e30787/images/16x16/help.png"/>
            </div>
            <div class="error-block display-none" name="localDirectoryPath-block">
                <img src="../images/16x16/error.png"/>Not correct path</div>
        </div>
        <div class="help-view display-none" name="localDirectoryPath-help-block">
            <lebel class="helptext display-none" name="localDirectoryPath-help-text">Specify a local directory (relative to the workspace root) where this module is checked out. If left empty, the last path component of the URL is used as the default, just like the svn CLI. A single period (.) may be used to check out the project directly into the workspace rather than into a subdirectory.
            </lebel>
        </div>
        <div class="div-textinput">
            <j:if test="${view_old != null and view_old.getFileToBuild() != null and  !view_old.getFileToBuild().equals(view.getFileToBuild())}">
                <label class="diff_value">&quot;${view_old.getFileToBuild()}&quot;</label>
                <br/>
            </j:if>
            <label>Project to build:</label>
            <div>
                <input class="textbox" name="fileToBuild" onblur="configurator.checkPTB(this)" type="text" value="${view.getFileToBuild()}"/>
                <img class="image" name="fileToBuild-help" onClick="configurator.imageHelp(this)" src="/static/c2e30787/images/16x16/help.png"/>
            </div>
            <div class="error-block display-none" name="fileToBuild-block">
                <img src="../images/16x16/error.png"/>Not correct file name</div>
        </div>
        <div class="help-view display-none" name="fileToBuild-help-block">
            <lebel class="helptext display-none" name="fileToBuild-help-text">Incorrect/invalid  file name (with extension)
            </lebel>
        </div>
        <div class="div-project-to-build">
            <j:if test="${view_old != null and view_old.getArtifacts() != null and !view.isListsEqual(view.getArtifacts(), view_old.getArtifacts())}">
                <j:forEach indexVar="i" items="${view_old.getArtifacts()}" var="artifact">
                    <label class="diff_value">&quot;${artifact}&quot;</label>
                    <br/>
                </j:forEach>

            </j:if>
            <div class="project-to-build-label">
                <label class="div-file-chooser-label">Path to artifacts:</label>
            </div>
            <div>
                <input class="textbox" name="pathToArtifacts" onblur="configurator.checkPath(this)" type="text"/>
                <input class="add-button" name="addProject" onclick="configurator.addArtifactPath(this)" type="button" value="+"/>
                <img class="image" name="pathToArtifacts-help" onClick="configurator.imageHelp(this)" src="/static/c2e30787/images/16x16/help.png"/>
            </div>
            <div class="error-block display-none" error="artifact_error" name="pathToArtifacts-block">
                <img src="../images/16x16/error.png"/>
                <label error="artifact_error_exp">Not correct path</label>
            </div>
            <div class="help-view display-none" name="pathToArtifacts-help-block">
                <lebel class="helptext display-none" name="pathToArtifacts-help-text">You can use wildcards like 'module/dist/**/*.zip'. See
                    
                    
                    
                    <a href="http://ant.apache.org/manual/Types/fileset.html">the includes attribute of Ant fileset </a>
                    for the exact format. The base directory is the workspace. You can only archive files that are located in your workspace.</lebel>
            </div>
            <div class="div-legend">
                <fieldset>
                    <legend>Artifacts</legend>
                    <select class="select" id="files_${sourceId[1]}" name="artifacts_group" onkeydown="configurator.deleteFromSelect(this, event)" size="3">
                        <j:set value="" var="forHidden"/>
                        <j:forEach indexVar="i" items="${view.getArtifacts()}" var="art">
                            <option value="${art}">${art}</option>
                            <j:set value="${forHidden+art+';'}" var="forHidden"/>
                        </j:forEach>
                    </select>
                </fieldset>
                <input name="artifacts" type="hidden" value="${forHidden}"/>
            </div>
        </div>
        <div class="div-project-version-file">
            <j:if test="${view_old != null and view_old.getVersionFiles() != null and view_old.IsVersionFiles() and !view.isListsEqual(view_old.getVersionFiles(), view.getVersionFiles())}">
                <j:forEach indexVar="i" items="${view_old.getVersionFiles()}" var="versionFile">
                    <label class="diff_value">&quot;${versionFile}&quot;</label>
                    <br/>
                </j:forEach>
            </j:if>
            <j:if test="${view_old != null and !view_old.IsVersionFiles() and !view.IsVersionFiles()==view_old.IsVersionFiles()}">
                <label class="diff_value">Incorrect/invalid path</label>
                <br/>
            </j:if>
            <j:if test="${view.IsVersionFiles()}">
                <div class="project-to-build-label">
                    <input checked="checked" class="check-box" name="isVersionFiles" onclick="configurator.versionFileCheckBoxChange(this)" type="checkbox"/>
                    <label class="div-label">Version Files</label>
                </div>
                <input class="textbox" name="versionFilesPath" onblur="configurator.checkPath(this)" type="text"/>
                <input class="add-button" name="addVersion" onclick="configurator.addPathFiles(this)" type="button" value="+"/>
            </j:if>
            <j:if test="${!view.IsVersionFiles()}">
                <div class="project-to-build-label">
                    <input class="check-box" name="isVersionFiles" onclick="configurator.versionFileCheckBoxChange(this)" type="checkbox"/>
                    <label class="div-label">Version Files</label>
                </div>
                <input class="textbox hidden" name="versionFilesPath" onblur="configurator.checkPath(this)" type="text"/>
                <input class="add-button hidden" name="addVersion" onclick="configurator.addPathFiles(this)" type="button" value="+"/>
            </j:if>
            <img class="image" name="versionFiles-help" onClick="configurator.imageHelp(this)" src="/static/c2e30787/images/16x16/help.png"/>
            <div class="error-block display-none" error="v_files_error" name="versionFilesPath-block">
                <img src="../images/16x16/error.png"/>
                <label error="v_files_error_exp">Not correct path</label>
            </div>
            <div class="help-view display-none" name="versionFiles-help-block">
                <lebel class="helptext display-none" name="versionFiles-help-text">If configured, build description will be based on the version from version file, otherwise on git hash or svn revision.
                </lebel>
            </div>
            <j:if test="${view.IsVersionFiles()}">
                <div class="div-legend" dir="fieldSetDiv">
                    <fieldset>
                        <legend>Version Files</legend>
                        <select class="select" id="files_${sourceId[2]}" name="vFiles" onkeydown="configurator.deleteFromSelect(this, event)" size="3">
                            <j:set value="" var="forHidden"/>
                            <j:forEach indexVar="i" items="${view.getVersionFiles()}" var="vf">
                                <option value="${vf}">${vf}</option>
                                <j:set value="${forHidden+vf+';'}" var="forHidden"/>
                            </j:forEach>
                        </select>
                    </fieldset>
                    <input name="versionFiles" type="hidden" value="${forHidden}"/>
                </div>
            </j:if>
            <j:if test="${!view.IsVersionFiles()}">
                <div class="div-legend display-none" dir="fieldSetDiv">
                    <fieldset>
                        <legend>Version Files</legend>
                        <select class="select hidden" id="files_${sourceId[2]}" name="vFiles" onkeydown="configurator.deleteFromSelect(this, event)" size="3">
                            <j:set value="" var="forHidden"/>
                            <j:forEach indexVar="i" items="${view.getVersionFiles()}" var="vf">
                                <option value="${vf}">${vf}</option>
                                <j:set value="${forHidden+vf+';'}" var="forHidden"/>
                            </j:forEach>
                        </select>
                    </fieldset>
                    <input name="versionFiles" type="hidden" value="${forHidden}"/>
                </div>
            </j:if>
        </div>
        <input name="guid" type="hidden" value="${view.getGuid()}"/>
        <div class="builders">${generator.getBuildersView(view, configState, oldBuildersModels).getHtml()}
            
            <span/></div>
        <div class="div-add-view">
            <input onClick="configurator.addBuilder('#' + ${divID})" type="button" value="Add Builder"/>
        </div>
    </div>
    <j:forEach indexVar="i" items="s" var="config"/>
</j:jelly>