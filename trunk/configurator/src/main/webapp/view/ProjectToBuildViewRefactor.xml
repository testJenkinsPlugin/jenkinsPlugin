<?xml version="1.0"?>
<j:jelly xmlns:j="jelly:core"
         xmlns:st="jelly:stapler"
         xmlns:d="jelly:define"
         xmlns:l="/lib/layout"
         xmlns:t="/lib/hudson"
         xmlns:f="/lib/form"
         xmlns:i="jelly:fmt"
         xmlns:p="/lib/hudson/project"
>
    <div id="${divID}" name="projectToBuild">

        <label onclick="configurator.closeElement(this)" class="close-project-to-build" name="closeProject">X</label>

        <div class="div-textinput">
                    <label>Project url:</label>
                <div>
                    <input type="text" name="projectUrl" onblur="configurator.checkURL(this)" value="${view.getProjectUrl()}" class="textbox"/>
                </div>
                <div class="error-block display-none" name = "projectUrl-block">
                    <img src="../images/16x16/error.png"/>
                    Not correct url
                </div>
        </div>
        <div class="div-textinput">
                <label>Credentials:</label>
            <div>
                <select name="credentials"
                        value="${view.getCredentials()}"
                        class="textbox">
                    <option value="not selected">not selected</option>
                    <j:forEach items="${credentialsList}" var="sct">

                        <j:choose>
                            <j:when test="${((view.getCredentials()==null) and userDefaultCredentials!=null and sct.endsWith(userDefaultCredentials))}">
                                <option value="${userDefaultCredentials}" selected='true'>
                                    ${view.getCredentialName(sct)}
                                </option>
                            </j:when>
                            <j:when test="${view.isCredentialSelected(view.getCredentials(),view.getCredentialId(sct))}">
                                <option value="${view.getCredentialId(sct)}" selected='true'>
                                    ${view.getCredentialName(sct)}
                                </option>
                            </j:when>

                            <j:otherwise>
                                <option value="${view.getCredentialId(sct)}">${view.getCredentialName(sct)}</option>
                            </j:otherwise>
                        </j:choose>
                    </j:forEach>
                </select>
                <j:if test="${isAdmin}">
                <input type="button" id="def_cred_button" onclick="configurator.setCurrentCredentialsAsDefault(this)" value="Set as default"/>
                </j:if>
            </div>
        </div>
        <div class="div-textinput">
                <label>Branch name:</label>
            <div>
                <input type="text" name="branchName" value="${view.getBranchName()}" class="textbox"/>
            </div>
        </div>
        <div class="div-textinput">
                <label>Local module directory (optional):</label>
            <div>
                <input type="text" onblur="configurator.checkPath(this)" value="${view.getLocalDirectoryPath()}" name="localDirectoryPath" class="textbox"/>
                <img src="/static/c2e30787/images/16x16/help.png" onClick="configurator.imageHelp(this)" class="image" name="localDirectoryPath-help"/>
            </div>
            <div class="error-block display-none" name = "localDirectoryPath-block">
                <img src="../images/16x16/error.png"/>
                Not correct path
            </div>

        </div>

        <div class="help-view display-none" name = "localDirectoryPath-help-block">
            <lebel class="helptext display-none" name = "localDirectoryPath-help-text">
                Specify a local directory (relative to the workspace root) where this module is checked out. If left empty, the last path component of the URL is used as the default, just like the svn CLI. A single period (.) may be used to check out the project directly into the workspace rather than into a subdirectory.
            </lebel>
        </div>

        <div class="div-textinput">
                <label>Project to build:</label>
            <div>
                <input type="text" name="fileToBuild" onblur="configurator.checkPTB(this)" value="${view.getFileToBuild()}" class="textbox"/>
                <img src="/static/c2e30787/images/16x16/help.png" onClick="configurator.imageHelp(this)" class="image" name="fileToBuild-help"/>
            </div>
            <div class="error-block display-none" name = "fileToBuild-block">
                <img src="../images/16x16/error.png"/>
                Not correct file name
            </div>


        </div>

        <div class="help-view display-none" name="fileToBuild-help-block">
            <lebel class="helptext display-none" name="fileToBuild-help-text">
                Project file name (with extension)
            </lebel>
        </div>


        <div class="div-project-to-build">
            <div class="project-to-build-label">
                <label class="div-file-chooser-label">Path to artifacts:</label>
            </div>
            <div>
                <input type="text" name="pathToArtefacts" onblur="configurator.checkPath(this)" class="textbox"/>
                <input type="button" onclick="configurator.addPath(this)" class="add-button" value="+" name = "addProject"/>
                <img src="/static/c2e30787/images/16x16/help.png" onClick="configurator.imageHelp(this)" class="image" name="pathToArtefacts-help"/>
            </div>
            <div error="artifact_error" class="error-block display-none" name="pathToArtefacts-block">
                <img src="../images/16x16/error.png"/>
                <label error="artifact_error_exp" > Not correct path</label>
            </div>
            <div class="help-view display-none" name="pathToArtefacts-help-block">
                <lebel class="helptext display-none" name="pathToArtefacts-help-text">
                    You can use wildcards like 'module/dist/**/*.zip'. See 
                    <a href="http://ant.apache.org/manual/Types/fileset.html">
                        the includes attribute of Ant fileset </a>for the exact format. The base directory is the workspace. You can only archive files that are located in your workspace.
                </lebel>
            </div>
            <div class="div-legend">
                <fieldset>
                    <legend>Artifacts</legend>
                    <select id="files_${sourceId[1]}" name="artefacts_group" class="select" onkeydown="configurator.deleteFromSelect(this, event)" size="3">
                        <j:set var="forHidden" value=""/>
                        <j:forEach items="${view.getArtefacts()}" var="art" indexVar="i">
                            <option value="${art}">${art}</option>
                            <j:set var="forHidden" value="${forHidden+art+';'}"/>
                        </j:forEach>
                    </select>
                </fieldset>

                <input type="hidden" name="artefacts" value="${forHidden}"/>
            </div>
        </div>

        <div  class="div-project-version-file">

            <j:if test="${view.IsVersionFiles()}">
                <div class="project-to-build-label">
                    <input type="checkbox" class="check-box" name="isVersionFiles" checked="checked" onclick="configurator.versionFileCheckBoxChange(this)" />
                    <label class="div-label">Version Files</label>
                </div>
                <input type="text" name="versionFilesPath" onblur="configurator.checkPath(this)" class="textbox"/>
                <input type="button" onclick="configurator.addPathFiles(this)" class="add-button"  value="+" name = "addVersion"/>
            </j:if>
            <j:if test="${!view.IsVersionFiles()}">
                <div class="project-to-build-label">
                    <input type="checkbox" class="check-box" name="isVersionFiles" onclick="configurator.versionFileCheckBoxChange(this)" />
                    <label class="div-label">Version Files</label>
                </div>
                <input type="text" name="versionFilesPath" onblur="configurator.checkPath(this)" class="textbox hidden"/>
                <input type="button" onclick="configurator.addPathFiles(this)" class="add-button hidden"  value="+" name = "addVersion" />
            </j:if>
            <div error="v_files_error" class="error-block display-none" name="versionFilesPath-block">
                <img src="../images/16x16/error.png"/>
                <label error="v_files_error_exp"> Not correct path</label>
            </div>
            
            <j:if test="${view.IsVersionFiles()}">
                <div class="div-legend" dir="fieldSetDiv">
                    <fieldset>
                        <legend>Version Files</legend>
                        <select id="files_${sourceId[2]}" name="vFiles"  class="select" onkeydown="configurator.deleteFromSelect(this, event)" size="3">
                            <j:set var="forHidden" value=""/>
                            <j:forEach items="${view.getVersionFiles()}" var="vf" indexVar="i">
                                <option value="${vf}">${vf}</option>
                                <j:set var="forHidden" value="${forHidden+vf+';'}"/>
                            </j:forEach>
                        </select>
                    </fieldset>
                 <input type="hidden" name="versionFiles" value="${forHidden}"/>

           </div> </j:if>
            <j:if test="${!view.IsVersionFiles()}">
                <div class="div-legend display-none" dir="fieldSetDiv">
                    <fieldset>
                        <legend>Version Files</legend>
                        <select id="files_${sourceId[2]}" name="vFiles"  class="select hidden" onkeydown="configurator.deleteFromSelect(this, event)" size="3">
                            <j:set var="forHidden" value=""/>
                            <j:forEach items="${view.getVersionFiles()}" var="vf" indexVar="i">
                                <option value="${vf}">${vf}</option>
                                <j:set var="forHidden" value="${forHidden+vf+';'}"/>
                            </j:forEach>
                        </select>
                    </fieldset>
                  <input type="hidden" name="versionFiles" value="${forHidden}" />

           </div> </j:if>
        </div>

        <div class="builders">
            <j:forEach items="${view.getBuilders()}" var="build" indexVar="i">
                ${generator.getBuilderView(build).getHtml()}
            </j:forEach>
            <span></span>
        </div>

        <div class="div-add-view">
            <input type="button" onClick="configurator.addBuilder('#' + ${divID})" value="Add Builder"/>
        </div>
        
    </div>         

    <j:forEach items="s" var="config" indexVar="i">
    </j:forEach>
</j:jelly>